name: Train and Test

on:
  pull_request:
    branches: [one_action_failed]
    paths-ignore:
      - 'data/**'
      - 'requirements.txt'
      - 'README.md'

jobs:
  train:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Train Model
        run: python train.py

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build --tag dinkuma/assignments:latest .
      
      - name: Push Docker image
        run: docker push dinkuma/assignments:latest

  test:
    runs-on: ubuntu-latest
    needs: train
    if: ${{ needs.train.result == 'success' }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker image
        run: docker pull dinkuma/assignments:latest

      - name: Run Docker container
        run: |
          OUTPUT=$(docker run dinkuma/assignments:latest)
          echo "Score:"
          echo "$OUTPUT"
          if [[ $(echo "$OUTPUT > 0.50" | bc -l) -eq 1 ]]; then
            echo "Success - Score is greater than 0.50" 
          else
            echo "Failure - Score is not greater than 0.50"
            exit 1
          fi
